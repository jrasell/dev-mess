cpus: 8
memory: "8GiB"

images:
  - location: "https://cloud-images.ubuntu.com/releases/22.04/release/ubuntu-22.04-server-cloudimg-arm64.img"
    arch: "aarch64"
    digest: "sha256:f6b5b3a980f28f25fe5203ae74b79cc664ae5505cf255a62f3b01be46ab9967a"

mounts:
  - location: "~/Projects/Infra/dev-mess/lima/scripts"
    mountPoint: "/opt/scripts"
    writable: true

networks:
  - lima: shared

provision:
  - mode: user
    script: |
      #!/usr/bin/env bash

      set -eux -o pipefail
      
      sudo bash /opt/scripts/linux-bootstrap.sh
      sudo bash /opt/scripts/linux-docker.sh
      sudo bash /opt/scripts/linux-cni.sh
      sudo bash /opt/scripts/linux-nomad.sh

  - mode: user
    script: |
      #!/usr/bin/env bash
      
      set -eux -o pipefail
      
      # Ensure the target log file exists, so it can be written to straight
      # away.
      sudo touch /var/log/nomad.log
      
      # Write the config file which runs the agent in both server and client
      # mode.
      cat <<EOF | sudo tee -a /etc/nomad.d/nomad.hcl
      
      # Elevate logging level and log to a specific file, so that it is easier
      # to follow.
      log_level = "DEBUG"
      log_file  = "/var/log/nomad.log"
      
      # Enable pprof and debugging by default.
      enable_debug = true
  
      # Bind to the IPv4 address that is routable from the host and provided by
      # Lima.
      bind_addr = "{{ GetPrivateInterfaces | include \"name\"  \"lima0\" | exclude \"type\" \"IPv6\" | attr \"address\" }}"
      data_dir  = "/var/nomad"
      
      # Enable a single server setup.
      server {
        enabled          = true
        bootstrap_expect = 1
      }
      
      # Enabled the client and specify the interface that is routable from the
      # host for task networks.
      client {
        enabled           = true
        network_interface = "lima0"
      }
      
      # Export all the telemetry we can get and allow Prometheus format
      # querying.
      telemetry {
        publish_allocation_metrics = true
        publish_node_metrics       = true
        prometheus_metrics         = true
      }
      EOF
      
      # Identify the Nomad bind address and add this default, so it is
      # available when running the Nomad CLI.
      NOMAD_ADDR=$(ip addr | awk '/inet/ && /lima0/{sub(/\/.*$/,"",$2); print $2}')
      
      cat <<EOF | sudo tee -a /etc/environment
      export NOMAD_ADDR=http://${NOMAD_ADDR}:4646
      EOF
      
      # Start the Nomad service.
      sudo systemctl enable --now nomad
      sudo service nomad start
